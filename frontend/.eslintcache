[{"C:\\github\\everytime\\frontend\\src\\index.js":"1","C:\\github\\everytime\\frontend\\src\\App.js":"2","C:\\github\\everytime\\frontend\\src\\pages\\Register.js":"3","C:\\github\\everytime\\frontend\\src\\pages\\Login.js":"4","C:\\github\\everytime\\frontend\\src\\pages\\MyPage.js":"5","C:\\github\\everytime\\frontend\\src\\pages\\Board.js":"6","C:\\github\\everytime\\frontend\\src\\components\\Board\\UserProfile.jsx":"7","C:\\github\\everytime\\frontend\\src\\components\\Board\\BoardInput.jsx":"8","C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterInput.js":"9","C:\\github\\everytime\\frontend\\src\\components\\Register\\ChcekIdButton.js":"10","C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterButton.js":"11","C:\\github\\everytime\\frontend\\src\\components\\Register\\SchoolSearchResult.js":"12","C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterSelect.js":"13","C:\\github\\everytime\\frontend\\src\\components\\Login\\LoginInput.js":"14","C:\\github\\everytime\\frontend\\src\\components\\Login\\LoginButton.js":"15","C:\\github\\everytime\\frontend\\src\\components\\Board\\BoardTextarea.jsx":"16"},{"size":234,"mtime":1610283461086,"results":"17","hashOfConfig":"18"},{"size":723,"mtime":1610531146158,"results":"19","hashOfConfig":"18"},{"size":5098,"mtime":1610532073589,"results":"20","hashOfConfig":"18"},{"size":1964,"mtime":1610531146189,"results":"21","hashOfConfig":"18"},{"size":2284,"mtime":1610531146191,"results":"22","hashOfConfig":"18"},{"size":4922,"mtime":1610531146188,"results":"23","hashOfConfig":"18"},{"size":835,"mtime":1610531146163,"results":"24","hashOfConfig":"18"},{"size":552,"mtime":1610531146161,"results":"25","hashOfConfig":"18"},{"size":909,"mtime":1610531146173,"results":"26","hashOfConfig":"18"},{"size":494,"mtime":1610531146171,"results":"27","hashOfConfig":"18"},{"size":537,"mtime":1610531146172,"results":"28","hashOfConfig":"18"},{"size":352,"mtime":1610531146182,"results":"29","hashOfConfig":"18"},{"size":1010,"mtime":1610531146180,"results":"30","hashOfConfig":"18"},{"size":640,"mtime":1610531146168,"results":"31","hashOfConfig":"18"},{"size":507,"mtime":1610531146167,"results":"32","hashOfConfig":"18"},{"size":755,"mtime":1610531146161,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1ab78tl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\github\\everytime\\frontend\\src\\index.js",[],["68","69"],"C:\\github\\everytime\\frontend\\src\\App.js",[],"C:\\github\\everytime\\frontend\\src\\pages\\Register.js",["70"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CheckIdButton from \"../components/Register/ChcekIdButton\";\r\nimport RegisterInput from \"../components/Register/RegisterInput\";\r\nimport RegisterButton from \"../components/Register/RegisterButton\";\r\nimport RegisterSelect from \"../components/Register/RegisterSelect\";\r\nimport SchoolSearchResult from \"../components/Register/SchoolSearchResult\";\r\n\r\nconst schoolArr = [\r\n  \"서울대학교\",\r\n  \"카이스트\",\r\n  \"포항공과대학교\",\r\n  \"연세대학교\",\r\n  \"고려대학교\",\r\n  \"서강대학교\",\r\n  \"성균관대학교\",\r\n  \"한양대학교\",\r\n  \"이화여자대학교\",\r\n  \"중앙대학교\",\r\n  \"경희대학교\",\r\n  \"서울시립대학교\",\r\n  \"한국외국어대학교\",\r\n  \"광운대학교\",\r\n  \"동국대학교\",\r\n  \"건국대학교\",\r\n  \"홍익대학교\",\r\n  \"아주대학교\",\r\n  \"인하대학교\",\r\n  \"숙명여자대학교\",\r\n  \"국민대학교\",\r\n  \"세종대학교\",\r\n  \"숭실대학교\",\r\n  \"덕성여자대학교\",\r\n  \"서울여자대학교\",\r\n].sort();\r\n\r\nfunction Register({ history }) {\r\n  const [inputs, setInput] = useState({\r\n    userId: \"\",\r\n    userPw: \"\",\r\n    userEmail: \"\",\r\n    userNickname: \"\",\r\n    usableId: false,\r\n  });\r\n\r\n  const { userId, userPw, userEmail, userNickname, usableId } = inputs;\r\n\r\n  const [option, setOption] = useState(\"2014\");\r\n\r\n  const entranceYearArray = [2014, 2013, 2012, 2011, 2010];\r\n\r\n  const [schoolInput, setSchoolInput] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState(schoolArr);\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    setInput({\r\n      ...inputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const checkId = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"/register/checkId\", {\r\n        id: userId,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          alert(\"사용가능한 아이디입니다.\");\r\n          setInput({\r\n            ...inputs,\r\n            usableId: true,\r\n          });\r\n        } else if (response.status === 404) {\r\n          alert(\"다른 아이디를 입력해주세요\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleOption = (e) => {\r\n    setOption(e.target);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSchoolInput(e.target.value);\r\n    const result = schoolArr.filter((school) => {\r\n      return school.includes(e.target.value);\r\n    });\r\n    setSearchResult(result);\r\n  };\r\n\r\n  const handleSearchClick = (e) => {\r\n    e.preventDefault();\r\n    setSchoolInput(e.target.textContent);\r\n  };\r\n\r\n  const SignUp = (e) => {\r\n    e.preventDefault();\r\n    if (usableId === false) {\r\n      alert(\"아이디 중복확인을 해주세요\");\r\n      return;\r\n    }\r\n    if (!userId || !userPw || !userEmail || !userNickname) {\r\n      alert(\"필수 항목을 작성해주세요\");\r\n      return;\r\n    }\r\n    alert(\r\n      `${userId}, ${userPw}, ${userEmail}, ${userNickname}, ${option}, ${schoolInput}`\r\n    );\r\n    axios\r\n      .post(\"/register\", {\r\n        id: userId,\r\n        password: userPw,\r\n        email: userEmail,\r\n        nickname: userNickname,\r\n        entranceYear: option,\r\n        school: schoolInput,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          alert(\"회원가입완료!\");\r\n          history.push(\"./board\");\r\n        } else if (response.status === 404) {\r\n          alert(\"회원가입실패!\");\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={SignUp}>\r\n        <RegisterInput\r\n          labelName=\"아이디\"\r\n          name=\"userId\"\r\n          placeholder=\"아이디\"\r\n          onChange={onChange}\r\n          value={userId}\r\n        />\r\n        <CheckIdButton onClick={checkId}>중복체크</CheckIdButton>\r\n        <RegisterInput\r\n          labelName=\"비밀번호\"\r\n          name=\"userPw\"\r\n          placeholder=\"비밀번호\"\r\n          onChange={onChange}\r\n          value={userPw}\r\n        />\r\n        <RegisterInput\r\n          labelName=\"이메일\"\r\n          name=\"userEmail\"\r\n          placeholder=\"이메일\"\r\n          onChange={onChange}\r\n          value={userEmail}\r\n        />\r\n        <RegisterInput\r\n          labelName=\"닉네임\"\r\n          name=\"userNickname\"\r\n          placeholder=\"닉네임\"\r\n          onChange={onChange}\r\n          value={userNickname}\r\n        />\r\n        <RegisterSelect\r\n          labelName=\"입학년도\"\r\n          handleOption={handleOption}\r\n          option={option}\r\n          dataArr={entranceYearArray}\r\n        />\r\n        <RegisterInput\r\n          labelName=\"학교선택\"\r\n          name=\"userSchool\"\r\n          placeholder=\"학교를 검색하세요\"\r\n          onChange={handleSearch}\r\n          value={schoolInput}\r\n        />\r\n        <SchoolSearchResult\r\n          datas={searchResult}\r\n          handleSearchClick={handleSearchClick}\r\n        />\r\n        <RegisterButton type=\"submit\">회원가입</RegisterButton>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\github\\everytime\\frontend\\src\\pages\\Login.js",[],"C:\\github\\everytime\\frontend\\src\\pages\\MyPage.js",[],"C:\\github\\everytime\\frontend\\src\\pages\\Board.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Board\\UserProfile.jsx",[],"C:\\github\\everytime\\frontend\\src\\components\\Board\\BoardInput.jsx",[],"C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterInput.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Register\\ChcekIdButton.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterButton.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Register\\SchoolSearchResult.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Register\\RegisterSelect.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Login\\LoginInput.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Login\\LoginButton.js",[],"C:\\github\\everytime\\frontend\\src\\components\\Board\\BoardTextarea.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":26},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]